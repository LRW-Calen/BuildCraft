package buildcraft.datagen.silicon;

import buildcraft.datagen.base.BCBaseBlockStateGenerator;
import buildcraft.silicon.BCSilicon;
import buildcraft.silicon.BCSiliconBlocks;
import net.minecraft.client.renderer.block.model.ItemTransforms;
import net.minecraft.core.Direction;
import net.minecraft.data.DataGenerator;
import net.minecraftforge.client.model.generators.BlockModelBuilder;
import net.minecraftforge.client.model.generators.ConfiguredModel;
import net.minecraftforge.client.model.generators.ModelBuilder;
import net.minecraftforge.common.data.ExistingFileHelper;
import org.jetbrains.annotations.NotNull;

public class SiliconBlockStateGenerator extends BCBaseBlockStateGenerator {
    public SiliconBlockStateGenerator(DataGenerator gen, ExistingFileHelper exFileHelper) {
        super(gen, BCSilicon.MODID, exFileHelper);
    }

    @Override
    protected void registerStatesAndModels() {
        // laser
        ModelBuilder laser = models().withExistingParent("buildcraftsilicon:block/laser", BLOCK)
                .element()
                .from(0, 0, 0)
                .to(16, 4, 16)
                .face(Direction.DOWN).texture("#bottom").cullface(Direction.DOWN).end()
                .face(Direction.UP).texture("#top").end()
                .face(Direction.NORTH).texture("#side").cullface(Direction.NORTH).end()
                .face(Direction.SOUTH).texture("#side").cullface(Direction.SOUTH).end()
                .face(Direction.WEST).texture("#side").cullface(Direction.WEST).end()
                .face(Direction.EAST).texture("#side").cullface(Direction.EAST).end()
                .end()
                .element()
                .from(5, 4, 5)
                .to(11, 13, 11)
                .face(Direction.UP).texture("#top").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .transforms()
                .transform(ItemTransforms.TransformType.THIRD_PERSON_RIGHT_HAND)
                .rotation(10, -45, 170)
                .translation(0, 1.5F, -2.75F)
                .scale(0.375F, 0.375F, 0.375F)
                .end()
                .end()
                .texture("particle", "buildcraftsilicon:blocks/laser/bottom")
                .texture("top", "buildcraftsilicon:blocks/laser/top")
                .texture("side", "buildcraftsilicon:blocks/laser/side")
                .texture("bottom", "buildcraftsilicon:blocks/laser/bottom");
        getVariantBuilder(BCSiliconBlocks.laser.get()).forAllStates(state ->
                switch (state.getValue(BCSiliconBlocks.laser.get().getFacingProperty())) {
                    case UP -> ConfiguredModel.builder().modelFile(laser).build();
                    case DOWN -> ConfiguredModel.builder().modelFile(laser).rotationX(180).build();
                    case NORTH -> ConfiguredModel.builder().modelFile(laser).rotationX(90).build();
                    case EAST -> ConfiguredModel.builder().modelFile(laser).rotationX(90).rotationY(90).build();
                    case SOUTH -> ConfiguredModel.builder().modelFile(laser).rotationX(90).rotationY(180).build();
                    case WEST -> ConfiguredModel.builder().modelFile(laser).rotationX(90).rotationY(270).build();
                }
        );

        // advanced_crafting_table
        getVariantBuilder(BCSiliconBlocks.advancedCraftingTable.get())
                .forAllStates(s -> ConfiguredModel.builder().modelFile(
                        models().withExistingParent("buildcraftsilicon:block/table/advanced_crafting", BLOCK)
                                .element()
                                .from(0, 0, 0)
                                .to(4, 3, 4)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(12, 0, 0)
                                .to(16, 3, 4)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(0, 0, 12)
                                .to(4, 3, 16)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(12, 0, 12)
                                .to(16, 3, 16)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(0, 3, 0)
                                .to(16, 9, 16)
                                .face(Direction.DOWN).texture("#middle").end()
                                .face(Direction.UP).texture("#top").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .texture("particle", "buildcraftsilicon:blocks/table/advanced_crafting/top")
                                .texture("top", "buildcraftsilicon:blocks/table/advanced_crafting/top")
                                .texture("middle", "buildcraftsilicon:blocks/table/advanced_crafting/middle")
                                .texture("bottom", "buildcraftsilicon:blocks/table/advanced_crafting/bottom")
                                .texture("side", "buildcraftsilicon:blocks/table/advanced_crafting/side")
                ).build());

        // assembly_table
        getVariantBuilder(BCSiliconBlocks.assemblyTable.get())
                .forAllStates(s -> ConfiguredModel.builder().modelFile(
                        models().withExistingParent("buildcraftsilicon:block/table/assembly", BLOCK)
                                .element()
                                .from(0, 0, 0)
                                .to(16, 1, 16)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(1, 1, 1)
                                .to(15, 3, 15)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(0, 3, 0)
                                .to(16, 9, 16)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#top").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .texture("particle", "buildcraftsilicon:blocks/table/assembly/top")
                                .texture("top", "buildcraftsilicon:blocks/table/assembly/top")
                                .texture("bottom", "buildcraftsilicon:blocks/table/assembly/bottom")
                                .texture("side", "buildcraftsilicon:blocks/table/assembly/side")
                ).build());

        // charging_table
        getVariantBuilder(BCSiliconBlocks.chargingTable.get())
                .forAllStates(s -> ConfiguredModel.builder().modelFile(
                        models().withExistingParent("buildcraftsilicon:block/table/charging", BLOCK)
                                .element()
                                .from(0, 0, 0).to(4, 6, 4)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(12, 0, 0).to(16, 6, 4)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(0, 0, 12).to(4, 6, 16)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(12, 0, 12).to(16, 6, 16)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(4, 0, 4).to(12, 6, 12)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(0, 6, 0).to(16, 9, 16)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#top").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .texture("particle", "buildcraftsilicon:blocks/table/charging/top")
                                .texture("top", "buildcraftsilicon:blocks/table/charging/top")
                                .texture("middle", "buildcraftsilicon:blocks/table/charging/middle")
                                .texture("bottom", "buildcraftsilicon:blocks/table/charging/bottom")
                                .texture("side", "buildcraftsilicon:blocks/table/charging/side")
                ).build());

        // integration_table
        getVariantBuilder(BCSiliconBlocks.integrationTable.get())
                .forAllStates(s -> ConfiguredModel.builder().modelFile(
                        models().withExistingParent("buildcraftsilicon:block/table/integration", BLOCK)
                                .element()
                                .from(0, 0, 0).to(16, 1, 16)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#middle").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(1, 1, 1).to(5, 3, 5)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(11, 1, 1).to(15, 3, 5)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(1, 1, 11).to(5, 3, 15)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(11, 1, 11).to(15, 3, 15)
                                .face(Direction.DOWN).texture("#bottom").end()
                                .face(Direction.UP).texture("#bottom").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(0, 3, 0).to(16, 9, 5)
                                .face(Direction.DOWN).texture("#middle").end()
                                .face(Direction.UP).texture("#top").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(0, 3, 0).to(5, 9, 16)
                                .face(Direction.DOWN).texture("#middle").end()
                                .face(Direction.UP).texture("#top").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(0, 3, 11).to(16, 9, 16)
                                .face(Direction.DOWN).texture("#middle").end()
                                .face(Direction.UP).texture("#top").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(11, 3, 0).to(16, 9, 16)
                                .face(Direction.DOWN).texture("#middle").end()
                                .face(Direction.UP).texture("#top").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(5, 3, 5).to(11, 7, 11)
                                .face(Direction.DOWN).texture("#middle").end()
                                .face(Direction.UP).texture("#top").end()
                                .face(Direction.NORTH).texture("#side").end()
                                .face(Direction.SOUTH).texture("#side").end()
                                .face(Direction.WEST).texture("#side").end()
                                .face(Direction.EAST).texture("#side").end()
                                .end()
                                .element()
                                .from(5, 7, 5).to(11, 8, 11)
                                .face(Direction.DOWN).texture("#center").end()
                                .face(Direction.UP).texture("#center").end()
                                .face(Direction.NORTH).texture("#center").end()
                                .face(Direction.SOUTH).texture("#center").end()
                                .face(Direction.WEST).texture("#center").end()
                                .face(Direction.EAST).texture("#center").end()
                                .end()
                                .texture("particle", "buildcraftsilicon:blocks/table/integration/top")
                                .texture("top", "buildcraftsilicon:blocks/table/integration/top")
                                .texture("middle", "buildcraftsilicon:blocks/table/integration/middle")
                                .texture("bottom", "buildcraftsilicon:blocks/table/integration/bottom")
                                .texture("side", "buildcraftsilicon:blocks/table/integration/side")
                                .texture("center", "buildcraftsilicon:blocks/table/integration/center")
                ).build());

        // programming_table
        BlockModelBuilder programming = models().withExistingParent("buildcraftsilicon:block/table/programming", BLOCK)
                .element()
                .from(0, 0, 0).to(4, 3, 4)
                .face(Direction.DOWN).texture("#bottom").end()
                .face(Direction.UP).texture("#bottom").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .element()
                .from(12, 0, 0).to(16, 3, 4)
                .face(Direction.DOWN).texture("#bottom").end()
                .face(Direction.UP).texture("#bottom").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .element()
                .from(0, 0, 12).to(4, 3, 16)
                .face(Direction.DOWN).texture("#bottom").end()
                .face(Direction.UP).texture("#bottom").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .element()
                .from(12, 0, 12).to(16, 3, 16)
                .face(Direction.DOWN).texture("#bottom").end()
                .face(Direction.UP).texture("#bottom").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .element()
                .from(0, 3, 0).to(16, 3, 16)
                .face(Direction.DOWN).texture("#middle").end()
                .face(Direction.UP).texture("#middle").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .element()
                .from(0, 3, 0).to(16, 9, 4)
                .face(Direction.DOWN).texture("#middle").end()
                .face(Direction.UP).texture("#top").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .element()
                .from(0, 3, 0).to(4, 9, 16)
                .face(Direction.DOWN).texture("#middle").end()
                .face(Direction.UP).texture("#top").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .element()
                .from(0, 3, 12).to(16, 9, 16)
                .face(Direction.DOWN).texture("#middle").end()
                .face(Direction.UP).texture("#top").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .element()
                .from(12, 3, 0).to(16, 9, 16)
                .face(Direction.DOWN).texture("#middle").end()
                .face(Direction.UP).texture("#top").end()
                .face(Direction.NORTH).texture("#side").end()
                .face(Direction.SOUTH).texture("#side").end()
                .face(Direction.WEST).texture("#side").end()
                .face(Direction.EAST).texture("#side").end()
                .end()
                .element()
                .from(5, 4, 5).to(11, 6, 11)
                .face(Direction.DOWN).texture("#center").end()
                .face(Direction.UP).texture("#center").end()
                .face(Direction.NORTH).texture("#center").end()
                .face(Direction.SOUTH).texture("#center").end()
                .face(Direction.WEST).texture("#center").end()
                .face(Direction.EAST).texture("#center").end()
                .end()
                .element()
                .from(4, 9, 4).to(12, 9, 12)
                .face(Direction.UP).texture("#glass").uvs(0, 0, 16, 16).end()
                .end()
                .texture("particle", "buildcraftsilicon:blocks/table/programming/top")
                .texture("top", "buildcraftsilicon:blocks/table/programming/top")
                .texture("middle", "buildcraftsilicon:blocks/table/programming/middle")
                .texture("bottom", "buildcraftsilicon:blocks/table/programming/bottom")
                .texture("side", "buildcraftsilicon:blocks/table/programming/side")
                .texture("center", "buildcraftsilicon:blocks/table/programming/center")
                .texture("glass", "buildcraftsilicon:blocks/table/programming/transparent");
        getVariantBuilder(BCSiliconBlocks.programmingTable.get())
                .forAllStates(
                        s -> ConfiguredModel.builder().modelFile(programming).build()
                );
    }

    @NotNull
    @Override
    public String getName() {
        return "BuildCraft Silicon BlockState Generator";
    }
}
